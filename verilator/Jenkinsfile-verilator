pipeline {
    agent any

    options {
        disableConcurrentBuilds()
        buildDiscarder(
                logRotator(
                    artifactNumToKeepStr: '10',
                    numToKeepStr: '10'
                )
            )
        quietPeriod 600
    }

    parameters {
        string(
            name: 'VERILATOR_VERSION',
            defaultValue: 'v4.228',
            description: 'Verilator Version'
        )
    }

    triggers{ pollSCM('H/15 * * * *') }

    stages {
        stage('sources') {
                steps {
                    dir("work") {
                    checkout(
                        changelog: true,
                        poll: true,
                        scm: [
                            $class: 'GitSCM',
                            branches: [[name: "${params.VERILATOR_VERSION}"]],
                            doGenerateSubmoduleConfigurations: false,
                            extensions: [
                                [ $class: 'CleanCheckout'],
                                [ $class: 'RelativeTargetDirectory',
                                    relativeTargetDir: 'verilator'
                                ],
                                [ $class: 'CheckoutOption',
                                    timeout: 30
                                ],
                                [ $class: 'CloneOption',
                                    depth: 0,
                                    noTags: false,
                                    reference: '',
                                    shallow: false,
                                    timeout: 45,
                                ]
                            ],
                            submoduleCfg: [],
                            userRemoteConfigs: [
                                [url: 'https://github.com/verilator/verilator.git']
                            ]
                        ]
                    )
                }
            }
        }

        stage('build') {
            steps {
                script {
                    def sc_versions = ['2.3.4']
                    def std_cxx_versions = ['cpp14', 'cpp17']

                    sh(script: 'rm -Rf work/archives; mkdir -p work/archives')
                    sh(script: 'rm -Rf work/systemC; mkdir -p work/systemC')

                    for (String sc_version: sc_versions) {
                        for (String std_cxx_version: std_cxx_versions) {
                            copyArtifacts(
                                projectName: 'systemC',
                                filter: "**/systemC-${sc_version}-${std_cxx_version}.tar.bz2",
                                target: "work/systemC",
                                flatten: true,
                                parameters: "SC_VERSION=${sc_version}",
                            )

                            dir("work/systemC") {
                                sh(script:"tar xvfj systemC-${sc_version}-${std_cxx_version}.tar.bz2")
                            }

                            def sc_home = "${WORKSPACE}/work/systemC/${sc_version}-${std_cxx_version}"
                            env.SYSTEMC_VERSION = sc_version
                            env.CXX_VERSION = std_cxx_version
                            env.SYSTEMC_HOME= sc_home
                            env.SYSTEMC= sc_home
                            env.SYSTEMC_INCLUDE = "${sc_home}/include"
                            env.SYSTEMC_LIBDIR = "${sc_home}/lib64"

                            dir("work/verilator") {
                                echo "Building Version: ${SYSTEMC_VERSION}-${CXX_VERSION}"
                                sh '''
                                    ls ../systemC
                                    VERILATOR_VERSION=$(git describe | sed "s/verilator_//")
                                    VERILATOR_VERSION_FULL="${VERILATOR_VERSION}"-"${SYSTEMC_VERSION}"-"${CXX_VERSION}"
                                    VERILATOR_PREFIX=$(pwd)/_install/${VERILATOR_VERSION_FULL#v}

                                    autoconf
                                    CXXFLAGS="-std=c++${CXX_VERSION#cpp}" ./configure \
                                        --prefix "$VERILATOR_PREFIX" \
                                        --bindir "$VERILATOR_PREFIX"/bin \
                                        --exec-prefix "$VERILATOR_PREFIX"/bin

                                    make clean

                                    make -j"$(nproc)"

                                    rm -Rf "${VERILATOR_PREFIX}"/..
                                    mkdir -p ${VERILATOR_PREFIX}
                                    make install

                                    cd ${VERILATOR_PREFIX}
                                    mkdir -p share/verilator/lmod
                                    m4 -DSYSTEMC_CXX_VERSION=${SYSTEMC_VERSION}-${CXX_VERSION} -DVERILATOR_VERSION=${VERILATOR_VERSION_FULL#v} ${WORKSPACE}/verilator/verilator-lmod.m4 > share/verilator/lmod/${VERILATOR_VERSION_FULL#v}.lua.m4
                                    ln -s share/verilator/include include
                                    for file in $(ls share/verilator/bin)
                                    do
                                        ln -s ../share/verilator/bin/"${file}" bin/"${file}"
                                    done

                                    cd ..

                                    tar -C ${VERILATOR_PREFIX}/.. -cjvf ${WORKSPACE}/work/archives/verilator-${VERILATOR_VERSION_FULL}.tar.bz2 ${VERILATOR_VERSION_FULL#v}
                                '''
                                }
                            }
                        }
                    }
                }
            }
        }

    post {
        success {
            archiveArtifacts artifacts: 'work/archives/*.tar.bz2', fingerprint: true
        }
    }
}